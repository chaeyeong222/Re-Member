plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}
group = 'com.cy'
version = '0.0.1-SNAPSHOT'
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
repositories {
	mavenCentral()
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	//redis 사용을 위한 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	testImplementation 'com.github.codemonstur:embedded-redis:1.0.0'
	//타임리프 추가
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

}
compileJava.options.encoding='UTF-8'
tasks.withType(JavaCompile){
	options.encoding='UTF-8'
	options.compilerArgs << "-parameters"
}
tasks.named('test') {
	useJUnitPlatform()
}